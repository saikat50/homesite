var SR=(function(module,$){'use strict';var Validator=function(options){this.$form=$(options.form);this.status=[];this.config=options.config||[];if(options.auto){this.enable();}};Validator.prototype.enable=function(){this.$form.on('submit.sr_validator',$.proxy(this,'validateForm'));};Validator.prototype.disable=function(){this.$form.off('submit.sr_validator');};Validator.prototype.validates=function(){var validates=true,l=this.config.length,i=0,result,field,desc,descCustom,trackData;this.status=[];for(;i<l;i++){field=this.config[i].field;desc=this.config[i].desc||field;result=this.validateField(field);validates&=result.validates;if(result.validates){continue;}
if($.type(desc)==='function'){desc=desc.call(field,field.val());}
if($.type(desc)==='object'){for(var item in desc){if(desc.hasOwnProperty(item)&&item==='0'&&typeof desc[item]==='object'){if(desc[item].hasOwnProperty('tagName')&&desc[item].hasOwnProperty('name')){descCustom=desc[item].tagName.toLowerCase()+' field '+desc[item].name;}}}}
trackData={category:'Form error',action:this.$form.attr('name')?this.$form.attr('name')+':'+(descCustom?descCustom:desc):this.$form.attr('class')+':'+(descCustom?descCustom:desc),label:result.message};SR.tracking.trackEvent(trackData.category,trackData.action,trackData.label);this.status.push({field:field,message:result.message});}
return!!validates;};Validator.prototype.validateForm=function(){var validates=this.validates(),l=this.status.length,i=0,input;this.$form.find('.validate_box').removeClass("validate_box");this.$form.find('.form_validation').remove();for(;i<l;i++){this.showMessage(this.status[i].field,this.status[i].message);}
if(!validates){this._doubleCheck();$(this.status[0].field)
.filter(':first')
.focus();}
return validates;};Validator.prototype.validateField=function(field){var result={validates:true},$input=$(field),value=$input.val()||'',config=this.getFieldConfig(field),l=config.length,i=0,message,rule;for(;i<l;i++){rule=config[i].rule;message=config[i].message;if($.type(message)==='undefined')
message=this.messages[rule];if($.type(message)==='function')
message=message.call($input,value);if($.type(rule)==='string')
rule=this.rules[rule];if($.type(rule)!=='function')
throw'Rule required';if(!rule.call($input,value)){result.validates=false;result.message=message;break;}}
return result;};Validator.prototype.getFieldConfig=function(field){var i,match=false;for(i in this.config){if($(this.config[i].field).get(0)===$(field).get(0)){match=true;break;}}
if(!match){this.config.push({field:field,config:[]});i=this.config.length-1;}
return this.config[i].config;};Validator.prototype.addRule=function(field,rule,message){this.getFieldConfig(field).push({rule:rule,message:message});};Validator.prototype.showMessage=function(field,message){$(field).filter(':first')
.parent()
.parent()
.parent()
.addClass('validate_box');$(field)
.filter(':first')
.parent()
.before($('<span/>',{'class':'form_validation','text':message}));};Validator.prototype.reset=function(){this.status=[];this.config=[];return this;};Validator.prototype._doubleCheck=function(){var me=this;if(this._submitted){alert("There are one or more errors on the form.\n"
+'Please check and try again.');setTimeout(function(){me._submitted=false;},2000);}else{this._submitted=true;}};Validator.prototype.rules={required:function(str){return!!str;},email:function(str){return(/^.+@.+\..+$/).test(str);},password:function(str){return(str.length>=4);},date:function(str){return(/^\d{2}\/\d{2}\/\d{4}$/).test(str);},postcodeFirstHalf:function(str){return(/^(\w{1,2}\d{1,2})$/).test(str);},postcode:function(str){return(/^(\w{1,2}\d{1,2})(\w?\s?\d\w{2})$/).test(str);},zipcode:function(str){return(/^(\d{5})(-\d{4})?$/).test(str);}};Validator.prototype.messages={required:function(str){return'This field is required';},email:function(str){return'A valid e-mail address is required';},password:function(str){return'Passwords must be at least 4 characters long';},date:function(str){return'Please enter a date in the format '+SR.l('date_format');},postcodeFirstHalf:function(str){return'Please enter the first half of your postcode';},postcode:function(str){return'Please enter a valid UK postcode';},zipcode:function(str){return'Please enter a valid zipcode';}};module.Validator=Validator;return module;}(SR||{},jQuery));
SR.search=(function(module,$){'use strict';var activeConfig,$form,$configLinks,$searchField,$station,$matches,settings={autoFocus:true},init=function(options){$.extend(settings,options);$form=$('#pageSearchForm');$configLinks=$form.find('input[data-search_config]');$searchField=$form.find('input[name=search]');$station=$form.find('select[name=station_id]');$matches=$form.find('.search_form_matches');configs.buddyup=configs.wanted;addEvents();$configLinks.filter(':checked').trigger('click');if(settings.autoFocus){$searchField.focus();}},addEvents=function(){$configLinks.click(changeConfig);$form.submit(validate);},changeConfig=function(){applyConfig($(this).data('search_config'));},setConfigs=function(){configs=arguments[0];},validate=function(){var v=new SR.Validator({form:$form,auto:false});if(activeConfig==='area'&&$matches.length){v.addRule($matches.find(':input:first'),function(){return $matches.find(':checked').length;},'Please choose a suggestion');}
else if(activeConfig==='area'){v.addRule($searchField,'required','Please enter an area/'+SR.l('postcode'));}
else if($station.is(':not(:disabled)')){v.addRule($station,'required','Please choose a station');}
return v.validateForm();},applyConfig=function(configName){activeConfig=configName;var key,$elements,$inputs,$rows,$enable,$disable,$show,$hide,config=configs[configName];if($.type(config)!=='object'){return false;}
if($.type(config.disable)==='array'){$elements=$(config.disable.join(','));$inputs=$elements.filter(':input');$rows=$elements.filter('.form_row');$disable=$inputs.add($rows.find(':input'));$hide=$rows.add($inputs.parents('.form_input'));$disable.attr('disabled','disabled');$hide.hide();}
if($.type(config.enable)==='array'){$elements=$(config.enable.join(','));$inputs=$elements.filter(':input');$rows=$elements.filter('.form_row');$enable=$inputs.add($rows.find(':input'));$show=$rows.add($inputs.parents('.form_input'));$enable.removeAttr('disabled');$show.show();}
if($.type(config.configs)==='array'){for(key in config.configs){$configLinks
.filter('[data-search_config="'+config.configs[key]+'"]')
.trigger('click');}}},configs={offered:{enable:['.form_row_search_by','.form_row_en_suite','.form_row_rooms_for','.form_row_bills_inc','.form_row_living_room','.form_row_room_sizes','.form_row_num_of_rooms','.form_row_household_size','.form_row_your_prefs','.form_row_include','.form_row_landlord','.form_row_posted_by','.form_row_gender','.form_row_age_range','.form_row_days_avail','.form_row_misc :input[name=parking]','.form_row_misc :input[name=dss]','.form_row_misc :input[name=pets_req]','.form_row_misc :input[name=vegetarians]','.form_row_misc :input[name=short_lets_considered]','.form_row_misc :input[name=disabled_access]','.form_row_area :input[name=miles_from_max]'],disable:['.form_row_num_of_beds','.form_row_couples','.form_row_area :input[name=max_other_areas]'],configs:['area']},flatstorent:{enable:['.form_row_search_by','.form_row_num_of_beds','.form_row_posted_by','.form_row_misc :input[name=parking]','.form_row_misc :input[name=dss]','.form_row_misc :input[name=pets_req]'],disable:['.form_row_num_of_rooms','.form_row_couples','.form_row_area :input[name=max_other_areas]','.form_row_include','.form_row_en_suite','.form_row_bills_inc','.form_row_landlord','.form_row_living_room','.form_row_rooms_for','.form_row_room_sizes','.form_row_gender','.form_row_household_size','.form_row_your_prefs','.form_row_age_range','.form_row_days_avail','.form_row_misc :input[name=vegetarians]'],configs:['area']},wanted:{enable:['.form_row_area :input[name=max_other_areas]','.form_row_couples','.form_row_num_of_rooms','.form_row_room_sizes','.form_row_gender','.form_row_age_range','.form_row_days_avail','.form_row_your_prefs'],disable:['.form_row_search_by','.form_row_en_suite','.form_row_bills_inc','.form_row_landlord','.form_row_living_room','.form_row_rooms_for','.form_row_num_of_rooms','.form_row_num_of_beds','.form_row_posted_by','.form_row_household_size','.form_row_include','.form_row_misc :input[name=parking]','.form_row_misc :input[name=dss]','.form_row_misc :input[name=pets_req]','.form_row_misc :input[name=vegetarians]','.form_row_misc :input[name=short_lets_considered]','.form_row_misc :input[name=disabled_access]','.form_row_area :input[name=miles_from_max]'],configs:['area']},area:{enable:['.form_row_area'],disable:['.form_row_zone','.form_row_tube','.form_row_commuter','.form_row_campus']},zone:{enable:['.form_row_zone'],disable:['.form_row_area','.form_row_tube','.form_row_commuter','.form_row_campus']},tube:{enable:['.form_row_tube'],disable:['.form_row_area','.form_row_zone','.form_row_commuter','.form_row_campus']},commuter:{enable:['.form_row_commuter'],disable:['.form_row_area','.form_row_tube','.form_row_zone','.form_row_campus']},campus:{enable:['.form_row_campus'],disable:['.form_row_area','.form_row_tube','.form_row_zone','.form_row_commuter']}};module.form={init:init,setConfigs:setConfigs};return module;}(SR.search||{},jQuery));
